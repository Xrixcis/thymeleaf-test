<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="com.github.xrixcis.thymeleaf.web"/>

    <!-- some Spring MVC initialization code -->
    <mvc:annotation-driven />
    <bean id="localeResolver"
          class="org.springframework.web.servlet.i18n.SessionLocaleResolver"
          p:defaultLocale="en_US"/>

    <mvc:resources mapping="/script/**" location="/script/" cache-period="1"/>
    <mvc:resources mapping="/style/**" location="/style/" cache-period="1"/>
    <mvc:resources mapping="/fonts/**" location="/fonts/" cache-period="3600000"/>

    <!-- ***************************** -->
    <!-- Thymeleaf configuration       -->
    <!-- ***************************** -->

    <!-- First the template resolver - templates are located in WEB-INF as per best practice -->
    <bean id="templateResolver"
          class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver"
          p:prefix="/WEB-INF/templates/"
          p:suffix=".html"/>

    <!-- Second is the template engine that renders Thymeleaf templates -->
    <!-- Enable Spring EL instead of standard OGLN expressions -->
    <!-- Add the layout dialect -->
    <bean id="templateEngine"
          class="org.thymeleaf.spring4.SpringTemplateEngine"
          p:templateResolver-ref="templateResolver"
          p:enableSpringELCompiler="true">
        <property name="additionalDialects">
            <set>
                <bean class="nz.net.ultraq.thymeleaf.LayoutDialect"/>
            </set>
        </property>
    </bean>

    <!-- lastly set up the Spring MVC view resolver -->
    <!-- viewNames is set to distinguish between thymeleaf & JSP views -->
    <!-- set it as the first resolver so that anything that falls through gets picked up by JSP resolver -->
    <bean id="thymeleafViewResolver"
          class="org.thymeleaf.spring4.view.ThymeleafViewResolver"
          p:templateEngine-ref="templateEngine"
          p:viewNames="th/*"
          p:order="1"/>


    <!-- ***************************** -->
    <!-- JSP Configuration             -->
    <!-- ***************************** -->

    <!-- JSP view resolver configuration -->
    <!-- JSPs are in WEB-INF as best practice says -->
    <!-- make it the second resolver so that it catches anything not resolved by Thymeleaf -->
    <bean id="jstlViewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:viewClass="org.springframework.web.servlet.view.JstlView"
          p:prefix="/WEB-INF/jsp/"
          p:suffix=".jsp"
          p:order="2"/>

</beans>